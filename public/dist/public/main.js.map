{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/new/new.component.css","webpack:///./src/app/new/new.component.html","webpack:///./src/app/new/new.component.ts","webpack:///./src/app/pet/pet.component.css","webpack:///./src/app/pet/pet.component.html","webpack:///./src/app/pet/pet.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { MainComponent } from './main/main.component';\nimport { NewComponent } from './new/new.component';\nimport { EditComponent } from './edit/edit.component';\nimport { PetComponent } from './pet/pet.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full',component: MainComponent },\n  { path: 'new',component: NewComponent },\n  { path: ':id/edit',component: EditComponent },\n  { path: ':id', component: PetComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\" style=\\\"text-align:center\\\">\\n  <h1>{{title}}</h1>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title : string = \"Pet Shelter\";\n  constructor(private _httpService: HttpService){}\n  ngOnInit(){\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { NewComponent } from './new/new.component';\nimport { EditComponent } from './edit/edit.component';\nimport { MainComponent } from './main/main.component';\nimport { PetComponent } from './pet/pet.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NewComponent,\n    EditComponent,\n    MainComponent,\n    PetComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQvZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h3>Edit this pet:</h3>\\n<form>\\n  <p *ngIf=\\\"error && error.name\\\" style=\\\"color: red;\\\">{{error.name.message}}</p>\\n  <div class=\\\"input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Pet name:</span>\\n    </div>\\n    <input name=\\\"pet.name\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"pet.name\\\">\\n  </div>\\n  <p *ngIf=\\\"error && error.type\\\" style=\\\"color: red;\\\">{{error.type.message}}</p>\\n  <div class=\\\"input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Pet type:</span>\\n    </div>\\n    <input name=\\\"pet.type\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"pet.type\\\">\\n  </div>\\n  <p *ngIf=\\\"error && error.description\\\" style=\\\"color: red;\\\">{{error.description.message}}</p>\\n  <div class=\\\"input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Description:</span>\\n    </div>\\n    <input name=\\\"pet.description\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"pet.description\\\">\\n  </div>\\n  <div>\\n    <h6>Skills:</h6>\\n    <div class=\\\"input-group mb-3\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Skill 1:</span>\\n      </div>\\n      <input name=\\\"pet.skill1\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"pet.skill1\\\">\\n    </div>\\n    <div class=\\\"input-group mb-3\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Skill 2:</span>\\n      </div>\\n      <input name=\\\"pet.skill2\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"pet.skill2\\\">\\n    </div>\\n    <div class=\\\"input-group mb-3\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Skill 3:</span>\\n      </div>\\n      <input name=\\\"pet.skill3\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"pet.skill3\\\">\\n    </div>\\n  </div>\\n  <button class=\\\"btn btn-outline-success\\\" (click)=\\\"editPet()\\\">Edit pet</button>\\n  <button class=\\\"btn btn-outline-danger\\\" (click)=\\\"goBack()\\\">Cancel</button>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  error: String;\n  id : String;\n  pet: any;\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => {\n        this.id = params['id'];\n    });\n    this.pet = {name:\"\", type:\"\", description:\"\", skill1:\"\", skill2:\"\", skill3:\"\"};\n    this.getPetFromService();\n  }\n  getPetFromService(){\n    let observable = this._httpService.getPet(this.id);\n    observable.subscribe(data => {\n      this.pet = {name: data['name'],\n                type: data['type'],\n                description: data['description'],\n                skill1: data['skills'][0],\n                skill2: data['skills'][1],\n                skill3: data['skills'][2],\n      };\n    });\n  }\n  goBack(){\n    this._router.navigate(['/'+this.id]);\n  }\n  editPet(){\n    let observable = this._httpService.editPet(this.id, this.pet);\n    observable.subscribe(data => {\n      console.log(\"oh oh\", data);\n      if (data['errors']){\n        this.error = data['errors'];\n      }\n      else{\n        this.goBack();\n      }\n    })\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _http: HttpClient) { }\n  getPets(){\n    return this._http.get('/pets');\n  }\n  getPet(id: String){\n    return this._http.get('/pets/'+id)\n  }\n  addPet(newtask: any){\n    return this._http.post('/pets/new', newtask)\n  }\n  like(pet_id: String){\n    return this._http.get('/pets/like/'+pet_id);\n  }\n  deletePet(id: String){\n    return this._http.delete('/pets/delete/'+id);\n  }\n  editPet(id: String, edit: any){\n    return this._http.put('/pets/edit/'+id, edit);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vbWFpbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h3>These pets are looking for a home!</h3>\\n<a [routerLink]=\\\"['/new']\\\">Add a pet to the shelter</a>\\n<p>We have quotes by:</p>\\n<table class=\\\"table\\\">\\n  <thead>\\n    <tr>\\n      <th>Name</th>\\n      <th>Type</th>\\n      <th>Actions</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let pet of pets\\\">\\n      <td>{{pet.name}}</td>\\n      <td>{{pet.type}}</td>\\n      <td>\\n        <button class=\\\"btn btn-outline-primary\\\" [routerLink]=\\\"[pet._id]\\\">Details</button>\\n        <button class=\\\"btn btn-outline-success\\\" [routerLink]=\\\"[pet._id,'edit']\\\">Edit</button>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n  pets: any;\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router,\n  ) { \n  }\n  ngOnInit() {\n    this.getAuthorsFromService()\n  }\n  getAuthorsFromService(): void{\n    let observable = this._httpService.getPets();\n    observable.subscribe(data => {\n      this.pets = data;\n    });\n  }\n  deleteAuthor(id: String): void{\n    let observable = this._httpService.deletePet(id);\n    observable.subscribe(data => {\n      this.getAuthorsFromService();\n    })\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy9uZXcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h3>Know of a pet needing a home?</h3>\\n<form>\\n  <p *ngIf=\\\"error && error.name\\\" style=\\\"color: red;\\\">{{error.name.message}}</p>\\n  <div class=\\\"input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Pet name:</span>\\n    </div>\\n    <input name=\\\"newPet.name\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newPet.name\\\">\\n  </div>\\n  <p *ngIf=\\\"error && error.type\\\" style=\\\"color: red;\\\">{{error.type.message}}</p>\\n  <div class=\\\"input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Pet type:</span>\\n    </div>\\n    <input name=\\\"newPet.type\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newPet.type\\\">\\n  </div>\\n  <p *ngIf=\\\"error && error.description\\\" style=\\\"color: red;\\\">{{error.description.message}}</p>\\n  <div class=\\\"input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Description:</span>\\n    </div>\\n    <input name=\\\"newPet.description\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newPet.description\\\">\\n  </div>\\n  <div>\\n    <h6>Skills:</h6>\\n    <div class=\\\"input-group mb-3\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Skill 1:</span>\\n      </div>\\n      <input name=\\\"newPet.skill1\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newPet.skill1\\\">\\n    </div>\\n    <div class=\\\"input-group mb-3\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Skill 2:</span>\\n      </div>\\n      <input name=\\\"newPet.skill2\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newPet.skill2\\\">\\n    </div>\\n    <div class=\\\"input-group mb-3\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Skill 3:</span>\\n      </div>\\n      <input name=\\\"newPet.skill3\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newPet.skill3\\\">\\n    </div>\\n  </div>\\n  <button class=\\\"btn btn-outline-success\\\" (click)=\\\"onSubmit()\\\">Add pet</button>\\n  <button class=\\\"btn btn-outline-danger\\\" [routerLink]=\\\"['/']\\\">Cancel</button>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.css']\n})\nexport class NewComponent implements OnInit {\n  error: String;\n  newPet: any;\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n  ngOnInit() {\n    this.newPet = {name: \"\", type: \"\", description: \"\", skill1: \"\", skill2: \"\", skill3: \"\"}\n  }\n  goHome() {\n    this._router.navigate(['/']);\n  }\n  onSubmit(){\n    let observable = this._httpService.addPet(this.newPet);\n    observable.subscribe(data => {\n      if (data['errors']){\n        this.error = data['errors'];\n      }\n      else{\n        this.goHome();\n      }\n    })\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BldC9wZXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h3>Details about {{pet.name}}</h3>\\n<a [routerLink]=\\\"['/']\\\">Home</a>\\n<p style=\\\"font-weight: bold;\\\">Pet type:<span style=\\\"margin-left: 20px; font-weight: none;\\\">{{pet.type}}</span></p>\\n<p style=\\\"font-weight: bold;\\\">Description:<span style=\\\"margin-left: 20px; font-weight: none;\\\">{{pet.description}}</span></p>\\n<p style=\\\"font-weight: bold;\\\">Skills: </p><ul style=\\\"margin-left: 20px; font-weight: none;\\\" *ngFor=\\\"let skill of pet.skills\\\">\\n  <li>{{skill}}</li>\\n</ul>\\n<p style=\\\"font-weight: bold;\\\">Likes:<span style=\\\"margin-left: 20px; font-weight: none;\\\">{{pet.likes}}</span></p>\\n<button *ngIf=\\\"!isLiked\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"like()\\\">Like this pet</button>\\n<button class=\\\"btn btn-outline-success\\\" (click)=\\\"onDelete()\\\">Adopt this pet!</button>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-pet',\n  templateUrl: './pet.component.html',\n  styleUrls: ['./pet.component.css']\n})\nexport class PetComponent implements OnInit {\n  isLiked: boolean = false;\n  pet: any;\n  id: any\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router,\n  ) { \n  }\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => {\n      this.id = params.id;\n      this.pet = {name:\"\",\n      type:\"\",\n      description:\"\",\n      skills:[\"\",\"\",\"\"]\n    }\n      this.getPetFromService()\n    });\n  }\n  getPetFromService(){\n    let observable = this._httpService.getPet(this.id);\n    observable.subscribe(data => {\n      this.pet = data;\n    })\n  }\n  like() {\n    this.isLiked = true;\n    let observable = this._httpService.like(this.id);\n    observable.subscribe(data => {\n      this.getPetFromService();\n    })\n  }\n  onDelete(){\n    let observable = this._httpService.deletePet(this.id);\n    observable.subscribe(data => {\n      this.goHome();\n    })\n  }\n  goHome() {\n    this._router.navigate(['/']);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}